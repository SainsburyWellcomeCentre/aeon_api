[build-system]
requires = ["setuptools>=62.0", "wheel>=0.37"]
build-backend = "setuptools.build_meta"

[project]
name = "swc-aeon"
version = "0.1.0"
requires-python = ">=3.11"
description = '''
    Code for managing acquired data from Project Aeon experiments. Includes general file IO,
    data QC, querying, and analysis modules.
'''
authors = [
  { name = "Jai Bhagat", email = "jkbhagatio@gmail.com" },
  { name = "Goncalo Lopes", email = "g.lopes@neurogears.org" },
  { name = "Thinh Nguyen", email = "thinh@datajoint.com" },
  { name = "Joseph Burling", email = "joseph@datajoint.com" },
  { name = "Chang Huan Lo", email = "changhuan.lo@ucl.ac.uk" },
  { name = "Jaerong Ahn", email = "jaerong.ahn@datajoint.com" },
]
license = { file = "license.md" }
readme = "readme.md"
dependencies = [
  "dotmap",
  "fastparquet",
  "graphviz",
  "matplotlib",
  "numpy>=1.21.0, <2",
  "opencv-python",
  "pandas>=1.3",
  "scikit-learn",
  "scipy",
  "seaborn",
]

[project.optional-dependencies]
dev = [
  "bandit",
  "pre-commit",
  "pydantic",
  "pyright",
  "pytest",
  "pytest-cov",
  "ruff",
]
gpu = ["cupy", "dask"]

[project.urls]
Homepage = "https://sainsburywellcomecentre.github.io/aeon_docs/"
Repository = "https://github.com/sainsburyWellcomeCentre/aeon_api"
Documentation = "https://sainsburywellcomecentre.github.io/aeon_docs/"

[tool.setuptools.packages.find]
include = ["aeon*"]

[tool.ruff]
lint.select = [
  "E",
  "W",
  "F",
  "I",
  "D",
  "UP",
  "S",
  "B",
  "A",
  "C4",
  "ICN",
  "PIE",
  "PT",
  "SIM",
  "PL",
]
line-length = 108
lint.ignore = [
  "E731",
  "PT004",  # Deprecated and will be removed in a future release.
  "PLR0912", 
  "PLR0913",
  "PLR0915",
]
extend-exclude = [
  ".git",
  ".github",
  ".idea",
  "*.ipynb",
  ".vscode",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "D103",    # skip adding docstrings for public functions  
  "S101",    # skip using assert
]
"aeon/schema/*" = [
  "D101",    # skip adding docstrings for schema classes
  "D106",    # skip adding docstrings for nested streams
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
useLibraryCodeForTypes = false
reportMissingImports = "none"
reportImportCycles = "error"
reportUnusedImport = "error"
reportUnusedClass = "error"
reportUnusedfunction = "error"
reportUnusedVariable = "error"
reportDuplicateImport = "error"
reportWildcardImportFromLibrary = "error"
reportPrivateUsage = "error"
reportCallInDefaultInitializer = "error"
reportUnnecessaryIsInstance = "error"
reportUnnecesaryCast = "error"
reportUnnecesarryComparison = "error"
reportUnnecessaryContains = "error"
reportAssertAlwaysTrue = "error"
reportSelfClsParameterName = "error"
reportUnusedExpression = "error"
reportMatchNotExhaustive = "error"
reportShadowedImports = "error"
# *Note*: we may want to set all 'ReportOptional*' rules to "none", but leaving 'em default for now
venvPath = "."
venv = ".venv"
exclude = [".venv/*"]

[tool.pytest.ini_options]
markers = ["api"]
